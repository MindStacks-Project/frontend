# Continuous integration pipeline for the frontend
name: ci

on:
  # Run on every push to main
  push:
    branches: [main]
  # â€¦and for every pull request targeting any branch
  pull_request:

# Cancel older runs on the same branch/PR to save time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub-hosted Linux runner

    env:
      NEXT_TELEMETRY_DISABLED: 1  # Silence Next.js telemetry during CI
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

    steps:
      # Checkout repository contents
      - name: Checkout
        uses: actions/checkout@v4

      # Install Node 20 and enable npm cache between runs
      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Clean install dependencies to match lock file exactly
      - name: Install dependencies
        run: npm ci

      # Run linting (fails the job on violations)
      - name: Lint
        run: npm run lint

      # Type-check with TypeScript without emitting output
      - name: Type check
        run: npx tsc --noEmit

      # Build the Next.js app in production mode
      - name: Build
        run: npm run build
